package luckyfish.programs.minepet.utils.v1_0R0.debugger;

import luckyfish.programs.minepet.pet.v1_0R0.model.ModelBase;
import luckyfish.programs.minepet.pet.v1_0R0.model.ModelBox;
import luckyfish.programs.minepet.utils.Location3D;

import javax.swing.*;
import java.awt.*;

import static luckyfish.programs.minepet.utils.math.MathHelper.*;
import static luckyfish.programs.minepet.utils.math.MathHelper.toRadians;


/**
 * 模型监视器
 *
 * 以后修模型方便了=w=
 */
public class PetModellingDebugger extends JDialog {
	private JPanel contentPane;
	private JTextArea ModelMonitorNameArea;
	private JComboBox ModelMonitorSelection;
	private JTextArea TextArea;
	private JTextPane xTextPane;
	private JTextField rotationXDisplay;
	private JTextArea yTextArea;
	private JTextField rotationYDisplay;
	private JTextField zTextField;
	private JTextField rotationZDisplay;
	private JTextArea rotateTargetOffsetTitle;
	private JTextArea offsetXTextArea;
	private JTextField offsetXDisplay;
	private JTextArea offsetYTextArea;
	private JTextField offsetYDisplay;
	private JTextArea offsetZTextArea;
	private JTextField offsetZDisplay;
	private JTextArea locationTextArea;
	private JTextArea locationXTitle;
	private JTextField locationXDisplay;
	private JTextArea locationYTitle;
	private JTextField locationYDisplay;
	private JTextArea locationZTitle;
	private JTextField locationZDisplay;
	private JTextArea rotationOffsets;
	private JTextArea rotationOffsetsXTitle;
	private JTextArea rotationOffsetsYTitle;
	private JTextArea rotationOffsetsZTitle;
	private JTextField rotationOffsetsXDisplay;
	private JTextField rotationOffsetsYDisplay;
	private JTextField rotationOffsetsZDisplay;
	private ModelBase monitorModel;

	public PetModellingDebugger(ModelBase monitorModel) {
		this.monitorModel = monitorModel;
		setContentPane(contentPane);
		setModal(true);
		setSize(600, 600);
//		setVisible(true);

		DefaultComboBoxModel<String> listSelectionModel = new DefaultComboBoxModel<>();

		monitorModel.getBoxes().forEach((name, modelBox) -> listSelectionModel.addElement(name));

		ModelMonitorSelection.setModel(listSelectionModel);
	}

	public void update() {
		String selectedItem = (String) ModelMonitorSelection.getSelectedItem();

		ModelBox box = monitorModel.getBoxes().get(selectedItem);

		rotationXDisplay.setText(String.valueOf(box.getRotation().x % 360));
		rotationYDisplay.setText(String.valueOf(box.getRotation().y % 360));
		rotationZDisplay.setText(String.valueOf(box.getRotation().z % 360));

		offsetXDisplay.setText(String.valueOf(box.getRotationTarget().getX()));
		offsetYDisplay.setText(String.valueOf(box.getRotationTarget().getY()));
		offsetZDisplay.setText(String.valueOf(box.getRotationTarget().getZ()));

		locationXDisplay.setText(String.valueOf(box.getLocation().getX()));
		locationYDisplay.setText(String.valueOf(box.getLocation().getY()));
		locationZDisplay.setText(String.valueOf(box.getLocation().getZ()));

		float offsetX = box.getRotationTarget().toVector().x == 0 ? 1 : box.getRotationTarget().toVector().x / abs_float(box.getRotationTarget().toVector().x), offsetY = box.getRotationTarget().toVector().y == 0 ? 1 : box.getRotationTarget().toVector().y / abs_float(box.getRotationTarget().toVector().y), offsetZ = box.getRotationTarget().toVector().z == 0 ? 1 : box.getRotationTarget().toVector().z / abs_float(box.getRotationTarget().toVector().z);

		float distanceToRotationPoint = box.getRotationTarget().distance(new Location3D(0, 0, 0));

		rotationOffsetsXDisplay.setText(String.valueOf(distanceToRotationPoint * offsetX * sin(toRadians(box.getRotation().z) * cos(toRadians(box.getRotation().y)))));
		rotationOffsetsYDisplay.setText(String.valueOf(distanceToRotationPoint * offsetY * cos(toRadians(box.getRotation().z)) * cos(toRadians(box.getRotation().x))));
		rotationOffsetsZDisplay.setText(String.valueOf(distanceToRotationPoint * offsetZ * sin(toRadians(box.getRotation().x)) * sin(toRadians(box.getRotation().y))));
	}

	private void createUIComponents() {
		// TODO: place custom component creation code here
	}

	{
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		contentPane = new JPanel();
		contentPane.setLayout(new BorderLayout(0, 0));
		final JPanel panel1 = new JPanel();
		panel1.setLayout(new BorderLayout(0, 0));
		contentPane.add(panel1, BorderLayout.NORTH);
		final JPanel panel2 = new JPanel();
		panel2.setLayout(new BorderLayout(0, 0));
		panel1.add(panel2, BorderLayout.NORTH);
		ModelMonitorNameArea = new JTextArea();
		ModelMonitorNameArea.setEditable(false);
		ModelMonitorNameArea.setEnabled(true);
		ModelMonitorNameArea.setText("监视模型");
		panel2.add(ModelMonitorNameArea, BorderLayout.WEST);
		ModelMonitorSelection = new JComboBox();
		final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
		ModelMonitorSelection.setModel(defaultComboBoxModel1);
		panel2.add(ModelMonitorSelection, BorderLayout.CENTER);
		final JPanel panel3 = new JPanel();
		panel3.setLayout(new BorderLayout(0, 0));
		panel1.add(panel3, BorderLayout.CENTER);
		final JPanel panel4 = new JPanel();
		panel4.setLayout(new BorderLayout(0, 0));
		panel3.add(panel4, BorderLayout.CENTER);
		final JPanel panel5 = new JPanel();
		panel5.setLayout(new BorderLayout(0, 0));
		panel4.add(panel5, BorderLayout.NORTH);
		xTextPane = new JTextPane();
		xTextPane.setEditable(false);
		xTextPane.setEnabled(true);
		xTextPane.setText("x");
		panel5.add(xTextPane, BorderLayout.WEST);
		rotationXDisplay = new JTextField();
		rotationXDisplay.setEditable(false);
		panel5.add(rotationXDisplay, BorderLayout.CENTER);
		final JPanel panel6 = new JPanel();
		panel6.setLayout(new BorderLayout(0, 0));
		panel4.add(panel6, BorderLayout.CENTER);
		final JPanel panel7 = new JPanel();
		panel7.setLayout(new BorderLayout(0, 0));
		panel6.add(panel7, BorderLayout.SOUTH);
		zTextField = new JTextField();
		zTextField.setEditable(false);
		zTextField.setText("z");
		panel7.add(zTextField, BorderLayout.WEST);
		rotationZDisplay = new JTextField();
		rotationZDisplay.setEditable(false);
		panel7.add(rotationZDisplay, BorderLayout.CENTER);
		yTextArea = new JTextArea();
		yTextArea.setEditable(false);
		yTextArea.setText("y");
		panel6.add(yTextArea, BorderLayout.WEST);
		rotationYDisplay = new JTextField();
		rotationYDisplay.setEditable(false);
		panel6.add(rotationYDisplay, BorderLayout.CENTER);
		TextArea = new JTextArea();
		TextArea.setEditable(false);
		TextArea.setText("旋转");
		panel3.add(TextArea, BorderLayout.WEST);
		final JPanel panel8 = new JPanel();
		panel8.setLayout(new BorderLayout(0, 0));
		panel1.add(panel8, BorderLayout.SOUTH);
		rotateTargetOffsetTitle = new JTextArea();
		rotateTargetOffsetTitle.setEditable(false);
		rotateTargetOffsetTitle.setText("旋转手柄偏移");
		panel8.add(rotateTargetOffsetTitle, BorderLayout.WEST);
		final JPanel panel9 = new JPanel();
		panel9.setLayout(new BorderLayout(0, 0));
		panel8.add(panel9, BorderLayout.CENTER);
		final JPanel panel10 = new JPanel();
		panel10.setLayout(new BorderLayout(0, 0));
		panel9.add(panel10, BorderLayout.NORTH);
		offsetXTextArea = new JTextArea();
		offsetXTextArea.setEditable(false);
		offsetXTextArea.setText("x");
		panel10.add(offsetXTextArea, BorderLayout.WEST);
		offsetXDisplay = new JTextField();
		offsetXDisplay.setEditable(false);
		panel10.add(offsetXDisplay, BorderLayout.CENTER);
		final JPanel panel11 = new JPanel();
		panel11.setLayout(new BorderLayout(0, 0));
		panel9.add(panel11, BorderLayout.CENTER);
		final JPanel panel12 = new JPanel();
		panel12.setLayout(new BorderLayout(0, 0));
		panel11.add(panel12, BorderLayout.SOUTH);
		offsetZTextArea = new JTextArea();
		offsetZTextArea.setEditable(false);
		offsetZTextArea.setText("z");
		panel12.add(offsetZTextArea, BorderLayout.WEST);
		offsetZDisplay = new JTextField();
		offsetZDisplay.setEditable(false);
		panel12.add(offsetZDisplay, BorderLayout.CENTER);
		offsetYTextArea = new JTextArea();
		offsetYTextArea.setEditable(false);
		offsetYTextArea.setText("y");
		panel11.add(offsetYTextArea, BorderLayout.WEST);
		offsetYDisplay = new JTextField();
		offsetYDisplay.setEditable(false);
		panel11.add(offsetYDisplay, BorderLayout.CENTER);
		final JPanel panel13 = new JPanel();
		panel13.setLayout(new BorderLayout(0, 0));
		contentPane.add(panel13, BorderLayout.SOUTH);
		final JPanel panel14 = new JPanel();
		panel14.setLayout(new BorderLayout(0, 0));
		panel13.add(panel14, BorderLayout.NORTH);
		locationTextArea = new JTextArea();
		locationTextArea.setEditable(false);
		locationTextArea.setText("旋转偏移前位置");
		panel14.add(locationTextArea, BorderLayout.WEST);
		final JPanel panel15 = new JPanel();
		panel15.setLayout(new BorderLayout(0, 0));
		panel14.add(panel15, BorderLayout.CENTER);
		final JPanel panel16 = new JPanel();
		panel16.setLayout(new BorderLayout(0, 0));
		panel15.add(panel16, BorderLayout.NORTH);
		locationXTitle = new JTextArea();
		locationXTitle.setEditable(false);
		locationXTitle.setText("x");
		panel16.add(locationXTitle, BorderLayout.WEST);
		locationXDisplay = new JTextField();
		locationXDisplay.setEditable(false);
		panel16.add(locationXDisplay, BorderLayout.CENTER);
		final JPanel panel17 = new JPanel();
		panel17.setLayout(new BorderLayout(0, 0));
		panel15.add(panel17, BorderLayout.CENTER);
		locationYTitle = new JTextArea();
		locationYTitle.setEditable(false);
		locationYTitle.setText("y");
		panel17.add(locationYTitle, BorderLayout.WEST);
		locationYDisplay = new JTextField();
		locationYDisplay.setEditable(false);
		panel17.add(locationYDisplay, BorderLayout.CENTER);
		final JPanel panel18 = new JPanel();
		panel18.setLayout(new BorderLayout(0, 0));
		panel15.add(panel18, BorderLayout.SOUTH);
		locationZTitle = new JTextArea();
		locationZTitle.setEditable(false);
		locationZTitle.setText("z");
		panel18.add(locationZTitle, BorderLayout.WEST);
		locationZDisplay = new JTextField();
		locationZDisplay.setEditable(false);
		panel18.add(locationZDisplay, BorderLayout.CENTER);
		final JPanel panel19 = new JPanel();
		panel19.setLayout(new BorderLayout(0, 0));
		panel13.add(panel19, BorderLayout.SOUTH);
		rotationOffsets = new JTextArea();
		rotationOffsets.setEditable(false);
		rotationOffsets.setText("旋转位置偏移");
		panel19.add(rotationOffsets, BorderLayout.WEST);
		final JPanel panel20 = new JPanel();
		panel20.setLayout(new BorderLayout(0, 0));
		panel19.add(panel20, BorderLayout.CENTER);
		final JPanel panel21 = new JPanel();
		panel21.setLayout(new BorderLayout(0, 0));
		panel20.add(panel21, BorderLayout.NORTH);
		rotationOffsetsXTitle = new JTextArea();
		rotationOffsetsXTitle.setEditable(false);
		rotationOffsetsXTitle.setText("x");
		panel21.add(rotationOffsetsXTitle, BorderLayout.WEST);
		rotationOffsetsXDisplay = new JTextField();
		rotationOffsetsXDisplay.setEditable(false);
		panel21.add(rotationOffsetsXDisplay, BorderLayout.CENTER);
		final JPanel panel22 = new JPanel();
		panel22.setLayout(new BorderLayout(0, 0));
		panel20.add(panel22, BorderLayout.CENTER);
		rotationOffsetsYTitle = new JTextArea();
		rotationOffsetsYTitle.setEditable(false);
		rotationOffsetsYTitle.setText("y");
		panel22.add(rotationOffsetsYTitle, BorderLayout.WEST);
		rotationOffsetsYDisplay = new JTextField();
		rotationOffsetsYDisplay.setEditable(false);
		panel22.add(rotationOffsetsYDisplay, BorderLayout.CENTER);
		final JPanel panel23 = new JPanel();
		panel23.setLayout(new BorderLayout(0, 0));
		panel20.add(panel23, BorderLayout.SOUTH);
		rotationOffsetsZTitle = new JTextArea();
		rotationOffsetsZTitle.setEditable(false);
		rotationOffsetsZTitle.setText("z");
		panel23.add(rotationOffsetsZTitle, BorderLayout.WEST);
		rotationOffsetsZDisplay = new JTextField();
		rotationOffsetsZDisplay.setEditable(false);
		panel23.add(rotationOffsetsZDisplay, BorderLayout.CENTER);
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return contentPane;
	}
}
